{"version":3,"file":"date-table2.js","sources":["../../../../../../packages/components/calendar/src/date-table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"[nsTable.b(), nsTable.is('range', isInRange)]\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n  >\n    <thead v-if=\"!hideHeader\">\n      <th v-for=\"day in weekDays\" :key=\"day\">{{ day }}</th>\n    </thead>\n\n    <tbody>\n      <tr\n        v-for=\"(row, index) in rows\"\n        :key=\"index\"\n        :class=\"{\n          [nsTable.e('row')]: true,\n          [nsTable.em('row', 'hide-border')]: index === 0 && hideHeader,\n        }\"\n      >\n        <td\n          v-for=\"(cell, key) in row\"\n          :key=\"key\"\n          :class=\"getCellClass(cell)\"\n          @click=\"handlePickDay(cell)\"\n        >\n          <div :class=\"nsDay.b()\">\n            <slot name=\"date-cell\" :data=\"getSlotData(cell)\">\n              <span>{{ cell.text }}</span>\n            </slot>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData.js'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { WEEK_DAYS } from '@element-plus/constants'\nimport {\n  dateTableEmits,\n  dateTableProps,\n  getMonthDays,\n  getPrevMonthLastDays,\n  toNestedArr,\n} from './date-table'\n\nimport type { CalendarDateCell, CalendarDateCellType } from './date-table'\nimport type { Dayjs } from 'dayjs'\n\ndefineOptions({\n  name: 'DateTable',\n})\n\nconst props = defineProps(dateTableProps)\nconst emit = defineEmits(dateTableEmits)\n\ndayjs.extend(localeData)\n\nconst { t, lang } = useLocale()\nconst nsTable = useNamespace('calendar-table')\nconst nsDay = useNamespace('calendar-day')\n\nconst now = dayjs().locale(lang.value)\n// https://day.js.org/docs/en/i18n/locale-data\nconst firstDayOfWeek: number = dayjs.localeData().firstDayOfWeek()\n\nconst isInRange = computed(() => !!props.range && !!props.range.length)\n\nconst rows = computed(() => {\n  let days: CalendarDateCell[] = []\n  if (isInRange.value) {\n    const [start, end] = props.range!\n    const currentMonthRange: CalendarDateCell[] = rangeArr(\n      end.date() - start.date() + 1\n    ).map((index) => ({\n      text: start.date() + index,\n      type: 'current',\n    }))\n\n    let remaining = currentMonthRange.length % 7\n    remaining = remaining === 0 ? 0 : 7 - remaining\n    const nextMonthRange: CalendarDateCell[] = rangeArr(remaining).map(\n      (_, index) => ({\n        text: index + 1,\n        type: 'next',\n      })\n    )\n    days = currentMonthRange.concat(nextMonthRange)\n  } else {\n    const firstDay = props.date.startOf('month').day()\n    const prevMonthDays: CalendarDateCell[] = getPrevMonthLastDays(\n      props.date,\n      (firstDay - firstDayOfWeek + 7) % 7\n    ).map((day) => ({\n      text: day,\n      type: 'prev',\n    }))\n    const currentMonthDays: CalendarDateCell[] = getMonthDays(props.date).map(\n      (day) => ({\n        text: day,\n        type: 'current',\n      })\n    )\n    days = [...prevMonthDays, ...currentMonthDays]\n    const remaining = 7 - (days.length % 7 || 7)\n    const nextMonthDays: CalendarDateCell[] = rangeArr(remaining).map(\n      (_, index) => ({\n        text: index + 1,\n        type: 'next',\n      })\n    )\n    days = days.concat(nextMonthDays)\n  }\n  return toNestedArr(days)\n})\n\nconst weekDays = computed(() => {\n  const start = firstDayOfWeek\n  if (start === 0) {\n    return WEEK_DAYS.map((_) => t(`el.datepicker.weeks.${_}`))\n  } else {\n    return WEEK_DAYS.slice(start)\n      .concat(WEEK_DAYS.slice(0, start))\n      .map((_) => t(`el.datepicker.weeks.${_}`))\n  }\n})\n\nconst getFormattedDate = (day: number, type: CalendarDateCellType): Dayjs => {\n  switch (type) {\n    case 'prev':\n      return props.date.startOf('month').subtract(1, 'month').date(day)\n    case 'next':\n      return props.date.startOf('month').add(1, 'month').date(day)\n    case 'current':\n      return props.date.date(day)\n  }\n}\n\nconst getCellClass = ({ text, type }: CalendarDateCell) => {\n  const classes: string[] = [type]\n  if (type === 'current') {\n    const date = getFormattedDate(text, type)\n    if (date.isSame(props.selectedDay, 'day')) {\n      classes.push(nsDay.is('selected'))\n    }\n    if (date.isSame(now, 'day')) {\n      classes.push(nsDay.is('today'))\n    }\n  }\n  return classes\n}\n\nconst handlePickDay = ({ text, type }: CalendarDateCell) => {\n  const date = getFormattedDate(text, type)\n  emit('pick', date)\n}\n\nconst getSlotData = ({ text, type }: CalendarDateCell) => {\n  const day = getFormattedDate(text, type)\n  return {\n    isSelected: day.isSame(props.selectedDay),\n    type: `${type}-month`,\n    day: day.format('YYYY-MM-DD'),\n    date: day.toDate(),\n  }\n}\n\ndefineExpose({\n  /** @description toggle date panel */\n  getFormattedDate,\n})\n</script>\n"],"names":["dayjs","localeData","useLocale","useNamespace","computed","rangeArr","getPrevMonthLastDays","getMonthDays","toNestedArr","WEEK_DAYS"],"mappings":"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"}